웹애플리케이션 프로젝트를 만듭니다.

+ 중요사항

1. 자바 소스파일 .java는 java resources 항목에서 파일을 생성

2. 웹과 관련된 정적파일 html, css,js, 이미지는
webapp 폴더에 생성

3. 웹과 관련된 동적파일 jsp 는 webapp 폴더에 생성
jsp 를 사용하면서부터는  html 대신에 모든 소스파일은 jsp로 합니다.
* 단, 비동기 통신을 사용할 때에는 html로 합니다.

4. jsp를 처리하기 위해서는 반드시 WAS(Web Application Server)역할을 하는
것이 필요합니다. 우리는 TomCat을 사용. -> WAS서버(웹컨테이너)가 있어야 합니다.

5. 웹에서 사용할 라이브러리는 build path 설정으로 하지않고
webapp 아래 보면 WEB-INF - lib 폴더에 라이브러리는 복붙해서 가져옵니다.

6. 웹컨테이너가 처리할 설정파일(배포기술자) web.xml 을 필요로 합니다.
-> 개발자 웹프로젝트에 없으면 톰캣의 web.xml을 기본으로 합니다.

7. 실행시 오류가 발생을 했습니다. 오류를 수정한 후
.java 를 수정하고 저장하면 자동으로 빌드하고 톰캣이 프로젝트를 새롭게 로드를 합니다.
.jsp를 수정/저장 한 후에는 브라우저에서 새로고침하세요.

=> 위에 것은 정상 동작 때 비정상적으로 수정된 코드가 반영이 안되면 톰캣을 재시작해주세요

<<JSP와 관련된 문법 요소>>
요청된 jsp 파일은 웹컨테이너가(WAS서버가).java 소스파일로변경 -> 
컴파일 -> .class -> 을 was서버가 저장해높음 -> 웹컨테이너 -> html로 변경 ->
시용자 브라우저에게 전달

1. JSP 기본문법
1) 스크립트릿 : <% %>
	-> 자바 코드 작성
2) 표현식 : <%  %> *자바스크립트 표현식기호 ${} 를 jsp에서는 el 이라고 부릅니다.
	-> 태그 요소에 출력내용(자바변수,수식,메소드...)작성
3) 지시자: <%  %> jsp 설정 관련
	page 지시자<%@ page   %>: 언어설정,import 등 jsp 파일에서는 필수적인 지시자
include 지시자 :file="파일명  , file속성으로지정된 소스코드를 포함시킴
4) 선언부 : <!	%> 변수와 메소드 선언
	변수는 스크립트릿 안에서 선언하고 쓰는것이 일반적이고
	메소드는 자바 소스파일로 작성해서 쓰는 것이 (html 태그들과 자바코드 분리)바람직하므로 거의 사용되지 않습니다.
	
2. 내장 객체
1) out : html 문서에 출력하기 위한 객체. 태그,스타일,자바스크립트를 html 문서에 출력하면 동작이 됩니다.
2) request : 요청. 사용자가 보낸 요청에 대한 정보를 저장하는 객체. 서블릿에서 메소드 인자로 선언.
자세한 메소드 실행은 2request.jsp 참고
*request 메소드 테스트 할때 필요한 설정사항*
이클립스에서 ipv4 로 표시되게 설정을 바꿉시다.
Run - Run Configurations
톰캣의 arguments 항목에 -Djava.net.preferIPv4Stack=true 추가하기

<<request 의 파라미터 사용>>
사용자는 처리할 데이터를 request(요청)으로 보냅니다. 
보내는 방법은 1)url 의 쿼리스트링 2)form 태그 사용
1) 번은 a태그 href 속성값으로 정하기. 자바스크립트의 location.href = '요청url과 쿼리스트링'
*예제파일*
3parameterSend.jsp
3parameterResceive.jsp







